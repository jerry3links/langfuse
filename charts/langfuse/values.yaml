# Default values for langfuse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ociscloud/langfuse
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "241112"

imagePullSecrets:
- name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  auth:
    username: admin
    password: 1qaz@WSX
    database: langfuse
  deploy: true
  architecture: standalone
  primary:
    service:
      ports:
        postgresql: 5432
    persistence:
      storageClass: local-path
      accessModes:
        - ReadWriteMany
      size: 2Gi

envVars:
  DATABASE_URL: postgresql://admin:1qaz@WSX@langfuse-postgresql:5432/langfuse
  NEXTAUTH_SECRET: 72LgmngOZWY+9Rc0wM5dH2CcV7Y0OVxP4bRpS5f/X5E=
  SALT: FU90XE6M2PrQ7Os377CvNlwpsw4b/gHrgeGMGZWFfIs=
  ENCRYPTION_KEY: 0a037f68610f96df9b5e68379f5a42b18bd4bd27f0e344582a71aed48abee5d6
  NEXTAUTH_URL: https://afs-mycoder-api.dev.com/langfuse/api/auth
  NEXT_PUBLIC_BASE_PATH: /langfuse
  TELEMETRY_ENABLED: "true"
  LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: "false"
  LANGFUSE_INIT_USER_EMAIL: cj_lee@asus.com
  LANGFUSE_INIT_USER_NAME: cj_lee
  LANGFUSE_INIT_USER_PASSWORD: cj_lee12
  LANGFUSE_CSP_ENFORCE_HTTPS: "true"
  LANGFUSE_INIT_ORG_ID: ocis
  LANGFUSE_INIT_ORG_NAME: "OCIS"
  LANGFUSE_INIT_PROJECT_ID: mycoder
  LANGFUSE_INIT_PROJECT_NAME: "My Coder"
  LANGFUSE_INIT_PROJECT_PUBLIC_KEY: pk-lf-15d017d4-b3c9-4ffe-b52d-c9ccfc3b7bb6
  LANGFUSE_INIT_PROJECT_SECRET_KEY: sk-lf-9adbcd94-decf-443d-8015-940b4cf366da
